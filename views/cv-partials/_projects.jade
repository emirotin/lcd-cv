ul.media-list
  // LIKEANDPAY

  li.media
    .pull-left
      a.thumbnail(href="javascript:void(0)")
        img.media-object(src="/images/projects/likeandpay.jpg", alt="Like'n'Pay, CoffeeScript and Node.js")
        span.preview
          span.glyphicon.glyphicon-zoom-in
    .media-body
      h2.media-heading
        | Like'n'Pay&#32;
        small FB Like, but with payments
      p
        strong Customer and Employer:&#32;
        a(href="http://likeandpay.ru", target="_blank") Like'n'Pay
        | .
        br
        | The project allows users to support content authors
        | by the Pay What You Want model.
      p
        strong Role:&nbsp;
        | Full-stack JS developer.
        br
        strong Tech:&nbsp;
        | CoffeeScript, Node.js, Express, MongoDB, jQuery, Ractive, Meteor,
        | CSS3, Sass, Bourbon,
        | iframe, postMessage, AJAX, HTTPS,
        | Heroku, Mandrill.
      p
        strong What I did:&nbsp;
        ul
          li
            | client-side — a master script installable on customer sites,
            | generates buttons (iframes) according to HTML markup and <code>data-</code> attributes,
            | button click opens another iframe with payment dialog,
          li server-side API (Node.js, Express), authentication system (Passport),
          li
            | payment systems integration
            | (
            a(href="https://money.yandex.ru/", target="_blank") Yandex Money
            | ,&#32;
            a(href="https://www.qiwi.ru/main.action", target="_blank") QIWI
            | , direct payments through&#32;
            a(href="http://payture.ru/", target="_blank") Payture
            | ).
  hr

  // EPAM - FLUX

  li.media
    .pull-right
      #carousel-flux.carousel-flux.carousel.slide(data-ride="carousel")
        ol.carousel-indicators
         li.active(data-target="#carousel-flux", data-slide-to="0")
         li(data-target="#carousel-flux", data-slide-to="1")
         li(data-target="#carousel-flux", data-slide-to="2")
         li(data-target="#carousel-flux", data-slide-to="3")

        .carousel-inner
          .item.active
            a.thumbnail(href="javascript:void(0)")
              img.media-object(src="/images/projects/flux1.jpg", alt="Auth widget for MTV.com")
              span.preview
                span.glyphicon.glyphicon-zoom-in
          .item
            a.thumbnail(href="javascript:void(0)")
              img.media-object(src="/images/projects/flux2.jpg", alt="Profile widget met across Viacom sites")
              span.preview
                span.glyphicon.glyphicon-zoom-in
          .item
            a.thumbnail(href="javascript:void(0)")
              img.media-object(src="/images/projects/flux3.jpg", alt="AJAX file upload")
              span.preview
                span.glyphicon.glyphicon-zoom-in
          .item
            a.thumbnail(href="javascript:void(0)")
              img.media-object(src="/images/projects/flux4.jpg", alt="Comment widget at GameTrailers")
              span.preview
                span.glyphicon.glyphicon-zoom-in

    .media-body
      h2.media-heading
        | Flux&#32;
        small A set of reusable widgets met across Viacom sites
      p
        strong Customer:&#32;
        a(href="http://www.viacom.com/", target="_blank") Viacom
        | ,&#32;
        strong Employer:&#32;
        a(href="http://www.epam.com/", target="_blank") EPAM Systems
        | .
        br
        | The project allows the developers of various Viacom sites
        | (MTV, EMA, GameTrailers, Colbert Nation, Nickelodeon, et. al.)
        | to reuse a standard set of JS widgets
        | (login, profile, vote up / down, social share, comments, file upload, WYSIWYG, etc.).
      p
        strong Role:&nbsp;
        | Front-end developer.
        br
        strong Tech:&nbsp;
        | JavaScript, jQuery, CSS3, SCSS, Bourbon.
      p
        strong What I did:&nbsp;
        ul
          li supported and expanded existing code base,
          li developed several new widgets, including AJAX file upload and WYSIWYG,
          li performed code review for new features,
          li introduced SCSS to the project, made a stand-alone fork of Bourbon to be used with Mindscape Web Workbench.

  hr

  // EPAM - SKILL MANAGER

  li.media
    .pull-left
      .thumbnail
        img.media-object(src="/images/projects/guru.jpg", alt="Front-End Skill Manager")
    .media-body
      h2.media-heading
        | Front-End Skill Manager&#32;
        small I'm too shy to explain
      p
        strong Employer:&#32;
        a(href="http://www.epam.com/", target="_blank") EPAM Systems
        | .
      p
        | While working as a (Senior / Lead) front-end developer I was also asked to oversee
        | and supervise front-end development processes at EPAM Media & Entertainment division.
      p
        | This included interviewing new job applicants and internal candidates for new positions,
        | evaluating developers' level, finding out their weaknesses and strengths,
        | and giving recommensdations on possible promotions or educational reading.
      p
        | I also organized a series of workshops aimed at showing modern tools for DRY development
        | (like Sass, CoffeeScript, HAML, Middleman), modern HTML5 and CSS3 features,
        | and general best practices for JavaScript coding.
  hr

  // PROHQ

  li.media
    .pull-right
      a.thumbnail(href="javascript:void(0)")
        img.media-object(src="/images/projects/prohq.jpg", alt="Complex modal for ProHQ")
        span.preview
          span.glyphicon.glyphicon-zoom-in
    .media-body
      h2.media-heading
        | ProHQ&#32;
        small Freelance Marketplace
      p
        strong Customer:&#32;
        a(href="http://www.prohq.ru/", target="_blank") ProHQ
        | .
        br
        | A front-end coding project for the Russian freelance job marketplace.
      p
        strong Role:&nbsp;
        | Front-end coder.
        br
        strong Tech:&nbsp;
        | Middleman, HTML5, HAML, CSS3, Sass, Compass,
        | CoffeeScript, jQuery, jQuery UI.
      p
        strong What I did:&nbsp;
        ul
          li prototyped 50+ pages using the Middleman static site generator,
          li then continued working on the project in RoR environment,
          li used jQuery UI without theme, custom-styled all components,
          li created a set of reusable components (modal, slider, etc.) around jQuery UI widgets.
  hr

  // TRANIO

  li.media
    .pull-left
      a.thumbnail(href="javascript:void(0)")
        img.media-object(src="/images/projects/tranio.jpg", alt="Fancy carousel for Tranio")
        span.preview
          span.glyphicon.glyphicon-zoom-in
    .media-body
      h2.media-heading
        | Tranio.ru&#32;
        small Overseas Property Catalogue
      p
        strong Customer:&#32;
        a(href="http://tranio.ru/", target="_blank") Tranio.ru
        | .
        br
        | A Russian catalogue of overseas property with powerful search and focus on related information.
      p
        strong Role:&nbsp;
        | Python and Front-end developer.
        br
        strong Tech:&nbsp;
        | Python, Django, PostgreSQL,
        | JavaScript, jQuery, jQuery UI, CSS3, Sass, Compass.
      p
        strong What I did:&#32;
        | worked on various features related to all parts of the site, for example:
        ul
          li
            | featured locations carousel on&nbsp;
            a(href="http://tranio.ru/", target="_blank") index
            | &#32;(front-end),
          li
            | site usage&nbsp;
            a(href="http://tranio.ru/stats/", target="_blank") statistics page
            | &#32;(back and front-end),
          li
            a(href="http://tranio.ru/luxury/", target="_blank") luxury page
            | &#32;(front-end),
          li
            | sophisticated data export functionality (from PostgreSQL to XML)
            | with transformations in accordance with&#32;
            a(href="http://advertising.yandex.com/product/media/realty.xml", target="_blank") Yandex.Realty
            | &#32;format (Python command-line).
  hr

  // TRANIO STARS

  li.media
    .pull-right
      a.thumbnail(href="javascript:void(0)")
        img.media-object(src="/images/projects/tranio-stars.jpg", alt="Promo site for Tranio")
        span.preview
          span.glyphicon.glyphicon-zoom-in
    .media-body
      h2.media-heading
        | Tranio Stars&#32;
        small Stars Property — Promo Site
      p
        strong URL:&#32;
        a(href="http://tranio.ru/stars/", target="_blank") http://tranio.ru/stars/
        | ,&#32;
        strong Customer:&#32;
        a(href="http://tranio.ru/", target="_blank") Tranio.ru
        | .
        br
        | A promo site for Tranio.ru focused on famous people's real estate over the world.
      p
        strong Role:&nbsp;
        | Python and Front-end developer.
        br
        strong Tech:&nbsp;
        | Python, Django,
        | JavaScript, jQuery, jQuery UI, CSS3, Sass, Compass.
      p
        strong What I did:&nbsp;
        | implemented overall design with as much CSS3 and as few images as possible,
        | coded some custom controls (checkboxes, drop-downs as seen in the search block on the index page),
        | coded the majority of back-end, including the Admin / Editor section
        | (not a Django Admin, custom interface).
  hr

  // TRANIO MOBILE

  li.media
    .pull-left
      a.thumbnail(href="javascript:void(0)")
        img.media-object(src="/images/projects/tranio-m.jpg", alt="Mobile site for Tranio")
        span.preview
          span.glyphicon.glyphicon-zoom-in
    .media-body
      h2.media-heading
        | Tranio for iPad&#32;
        small Mobile-friendly site version
      p
        strong URL:&#32;
        a(href="http://m.tranio.ru/", target="_blank") http://m.tranio.ru
        | ,&#32;
        strong Customer:&#32;
        a(href="http://tranio.ru/", target="_blank") Tranio.ru
        | .
        br
        | A mobile site version for Tranio.ru with focus on responsiveness and touch-friendly controls.
      p
        strong Role:&nbsp;
        | Front-end developer.
        br
        strong Tech:&nbsp;
        | Python, Django,
        | JavaScript, jQuery, CSS3, Sass, Compass,
        | BEM.
      p
        strong What I did:&nbsp;
        | coded overall site layout (responsive) and
        | several individual pages (index page, search results, individual object's page).
        br
        | This site's back-end is very thin, proxying all requests to main site's API.
  hr

  // BUILDSITE

  li.media
    .pull-right
      a.thumbnail(href="javascript:void(0)")
        img.media-object(src="/images/projects/buildsite.jpg", alt="In-browser PDF annotation tool")
        span.preview
          span.glyphicon.glyphicon-zoom-in
    .media-body
      h2.media-heading
        | BuildSite&#32;
        small Construction Submittals Managing Software
      p
        strong Customer:&#32;
        a(href="http://www.buildsite.com/", target="_blank") BuildSite, LLC
        | .
        br
        | A site allowing construction companies to manage submittals (documents packs).
      p
        strong Role:&nbsp;
        | Project Manager / Team Lead (3-5 developers).
        br
        strong Tech:&nbsp;
        | Python, Django,
        | JavaScript, jQuery, Bash & Linux black magic.
      p
        strong What I did:&nbsp;
        | besides regular PM / TL responsibilities, I helped developers
        | with some minor front-end tasks (CSS, jQuery),
        | as well as implemented 2 major features:
        ul
          li
            | Django Admin as DB editor for company's staff, with lots of customizations:
            | custom fields editing widgets (WYSIWYG, comma-separated list edited as a
            | line feed separated text, etc.) and custom data saving logic,
          li
            | in-browser PDF annotation tool&#32;
            em (the feature I'm extremely proud of)
            | , completely based on OSS. The tool allows annotating PDF pages
            | (drawing rectangles, ellipses, lines, arbitrary curves, typing custom text, undo and redo),
            | as well as removing individual pages from the doc.
            br
            | For this tool I designed an interface, wrote Bash scripts for preparing PDFs
            | for annotation and generating annotated documents,
            | wrote front-end code, and created a working Django prototype.
  hr
